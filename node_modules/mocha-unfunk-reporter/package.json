{
  "_args": [
    [
      {
        "raw": "mocha-unfunk-reporter",
        "scope": null,
        "escapedName": "mocha-unfunk-reporter",
        "name": "mocha-unfunk-reporter",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/demi/github/sabertoot"
    ]
  ],
  "_from": "mocha-unfunk-reporter@latest",
  "_id": "mocha-unfunk-reporter@0.4.0",
  "_inCache": true,
  "_location": "/mocha-unfunk-reporter",
  "_npmUser": {
    "name": "bartvds",
    "email": "bartvanderschoor@gmail.com"
  },
  "_npmVersion": "1.3.14",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mocha-unfunk-reporter",
    "scope": null,
    "escapedName": "mocha-unfunk-reporter",
    "name": "mocha-unfunk-reporter",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/mocha-unfunk-reporter/-/mocha-unfunk-reporter-0.4.0.tgz",
  "_shasum": "59eda97aec6ae6e26d7af4173490a65b7b082d20",
  "_shrinkwrap": null,
  "_spec": "mocha-unfunk-reporter",
  "_where": "/Users/demi/github/sabertoot",
  "author": {
    "name": "Bart van der Schoor",
    "url": "https://github.com/Bartvds"
  },
  "bugs": {
    "url": "https://github.com/Bartvds/mocha-unfunk-reporter/issues"
  },
  "dependencies": {
    "jsesc": "0.4.3",
    "ministyle": "~0.1.3",
    "miniwrite": "~0.1.3",
    "unfunk-diff": "~0.0.1"
  },
  "description": "Mocha reporter without console funkyness",
  "devDependencies": {
    "ansidiff": "~1.0.0",
    "chai": "git://github.com/Bartvds/chai/#fixes/1.8.x",
    "chai-fs": "0.0.3",
    "chai-json-schema": "~1.0.5",
    "grunt": "~0.4.2",
    "grunt-cli": "0.1.9",
    "grunt-concurrent": "~0.4.1",
    "grunt-continue": "0.0.1",
    "grunt-contrib-clean": "0.4.1",
    "grunt-contrib-jshint": "~0.6.3",
    "grunt-fileindex": "~0.1.0",
    "grunt-mocha": "~0.4.7",
    "grunt-mocha-test": "~0.4.0",
    "grunt-run-grunt": "~0.1.2",
    "grunt-shell": "0.3.0",
    "grunt-ts": "~1.5.0",
    "grunt-tslint": "~0.3.2",
    "gruntfile-gtx": "~0.2.1",
    "jshint-path-reporter": "~0.1.0",
    "mkdirp": "~0.3.5",
    "mocha": "~1.13.0",
    "proclaim": "1.4.0",
    "q": "~0.9.7",
    "source-map-support": "0.2.3",
    "tslint-path-formatter": "0.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "59eda97aec6ae6e26d7af4173490a65b7b082d20",
    "tarball": "https://registry.npmjs.org/mocha-unfunk-reporter/-/mocha-unfunk-reporter-0.4.0.tgz"
  },
  "homepage": "https://github.com/Bartvds/mocha-unfunk-reporter",
  "keywords": [
    "mocha",
    "reporter",
    "windows",
    "tools",
    "console",
    "unfunk"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/Bartvds/mocha-unfunk-reporter/blob/master/LICENSE-MIT"
    }
  ],
  "main": "build/unfunk.js",
  "maintainers": [
    {
      "name": "bartvds",
      "email": "bartvanderschoor@gmail.com"
    }
  ],
  "name": "mocha-unfunk-reporter",
  "optionalDependencies": {},
  "readme": "# mocha-unfunk-reporter\r\n[![Build Status](https://secure.travis-ci.org/Bartvds/mocha-unfunk-reporter.png?branch=master)](http://travis-ci.org/Bartvds/mocha-unfunk-reporter) [![Dependency Status](https://gemnasium.com/Bartvds/mocha-unfunk-reporter.png)](https://gemnasium.com/Bartvds/mocha-unfunk-reporter) [![NPM version](https://badge.fury.io/js/mocha-unfunk-reporter.png)](http://badge.fury.io/js/mocha-unfunk-reporter)\r\n\r\n> Mocha reporter without console funkyness\r\n\r\n## What?\r\n\r\nThis is a `Spec`-style console reporter for [mocha](http://visionmedia.github.io/mocha/) that doesn't confuse lesser console environments with funky display modes, cursor tricks or weird control characters.\r\n\r\nUse-case is running mocha's in basic console views embedded in IDE's or setups with text buffered output (like travis-ci). The default config uses only some ANSI console colour codes and writes with console.log() but has option to be tuned up or down for your specific unfunky use-case.\r\n\r\n### Notes\r\n\r\n* The reporter does *not* extend mocha's default Base prototype because that is a main source of funkyness. This means not all of mocha's reporter features are supported.\r\n* There are many features to ease testing usability, like aggressive attempts at getting a sensible error message or a stack filter that attempts to compact the stack trace by dropping mocha function calls.\r\n* Object & string diffs by [unfunk-diff](https://github.com/Bartvds/unfunk-diff).\r\n* Output by [ministyle](https://github.com/Bartvds/ministyle) & [miniwrite](https://github.com/Bartvds/miniwrite).\r\n\r\n\r\n## Usage\r\n\r\nInstall from npm:\r\n\r\n````\r\n$ npm install mocha-unfunk-reporter --save-dev\r\n```` \r\n\r\nThen use `'mocha-unfunk-reporter'` as `reporter` parameter in your favourite mocha runner. \r\n\r\nFor example in `grunt-mocha-test`:\r\n\r\n````js\r\ngrunt.initConfig({\r\n\t// ...\r\n\tmochaTest: {\r\n\t\toptions: {\r\n\t\t\treporter: 'mocha-unfunk-reporter'\r\n\t\t},\r\n\t\tany: {\r\n\t\t\tsrc: ['test/**/*.test.js']\r\n\t\t}\r\n\t}\r\n});\r\n````\r\n\r\n## Options\r\n\r\nThere are multiple ways to set global options:\r\n\r\n````js\r\n//on module using .option() method\r\nrequire('mocha-unfunk-reporter').option('<option_name>', <option_value>);\r\n//or on env with prefixed name\r\nprocess.env['mocha-unfunk-<option_name>'] = <option_value>;\r\n//env also work Bash-style: upper-cased and underscores instead of dashes\r\nprocess.env['MOCHA_UNFUNK_<OPTION_NAME>'] = <option_value>;\r\n````\r\n\r\nThese are equivalent:\r\n\r\n````js\r\nprocess.env['MOCHA_UNFUNK_REPORTPENDING'] = true;\r\nprocess.env['mocha-unfunk-reportPending'] = true;\r\n\r\nrequire('mocha-unfunk-reporter').option('reportPending', true);\r\nrequire('mocha-unfunk-reporter').option({reportPending: true});\r\n````\r\n\r\nThe package also expose a grunt task `mocha_unfunk` to set reporter options.\r\n\r\n````js\r\ngrunt.initConfig({\r\n\tmocha_unfunk: {\r\n\t\tmyStyle: {\r\n\t\t\toptions: {\r\n\t\t\t\tstyle: 'plain'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n````\r\n\r\n\r\n### Values\r\n\r\nReport styling: `style`\r\n\r\n* `'ansi'` - plain with ansi color codes (default)\r\n* `'plain'` - plain text\r\n* `'none'` - even plainer text\r\n* `'html'` - html span's with css colors\r\n* `'css'` - html span's with css classes\r\n* `'dev'` - style development codes\r\n\r\nOutput mode: `writer` \r\n\r\n* `'log'` - buffer and stream per line to `console.log()` (default)\r\n* `'stdio'` - stream to `process.stdout`\r\n* `'bulk'` - single buffered `console.log()`\r\n* `'null'` - ignore output\r\n\r\nReport details about pending specs, alongside failures: `reportPending`\r\n\r\n* `false` (default) or `true`\r\n\r\nUse custom stream: `stream` \r\n\r\n* any standard `WritableStream` (only usable via `require()`)\r\n\r\nFilter internals from stack: `stackFilter` \r\n\r\n* `true` (default) or `false`\r\n\r\n## Examples\r\n\r\nSomething like this: ([full version](https://raw.github.com/Bartvds/mocha-unfunk-reporter/master/media/mocha-unfunk-02.png))\r\n\r\n![ansi](https://raw.github.com/Bartvds/mocha-unfunk-reporter/master/media/mocha-unfunk-04.png)\r\n\r\nIf you got development install you can use `$ grunt demo` to get a quick demo overview.\r\n\r\n\r\n## Compatibility\r\n\r\n### Assertion libraries\r\n\r\nTested with:\r\n\r\n* [Chai Assertion Libary](http://chaijs.com) (best of the best, but no IE < 9)\r\n* [Proclaim](https://github.com/rowanmanning/proclaim) (Chai-like `'assert'`, supports IE < 9)\r\n* CommonJS-style `'assert'` (Node.js, browserify etc)\r\n\r\nShould work with any assertion library, like:\r\n\r\n* Expect.js (minimal reporting, use Chai's expect-style)\r\n* Should.js (untested, use Chai's should-style)\r\n\r\nCreate an issue if you got a tip or see bugs.\r\n\r\n### Mocha flavors:\r\n\r\nTesting on:\r\n\r\n* mocha (bin cli)\r\n* [grunt-mocha](https://github.com/kmiyashiro/grunt-mocha) (grunt + phantomJS)\r\n* [grunt-mocha-test](https://github.com/pghalliday/grunt-mocha-test) (grunt + node)\r\n\r\nKnown to work:\r\n\r\n* grunt-simple-mocha (grunt + node)\r\n* grunt-mocha-spawn (grunt + node)\r\n* grunt-cafe-mocha (grunt + node)\r\n\r\nCreate an issue if you got a tip or request for more.\r\n\r\n## Build\r\n\r\nUnfunk-reporter is written in [TypeScript](http://typescript.com) and built using [grunt](http://gruntjs.com) and powered by [gruntfile-gtx](https://github.com/Bartvds/gruntfile-gtx).\r\n\r\nInstall development dependencies in your git checkout:\r\n````\r\n$ npm install\r\n````\r\n\r\nYou need the global [grunt](http://gruntjs.com) command:\r\n````\r\n$ npm install grunt-cli -g\r\n````\r\n\r\nBuild and run tests:\r\n````\r\n// build & display demo (handy for development)\r\n$ grunt -h\r\n\r\n// build & full test\r\n$ grunt\r\n\r\n// show gtx alias\r\n$ grunt -h\r\n\r\n// run test sub module\r\n$ grunt gtx:diff\r\n````\r\n\r\nSee the `Gruntfile` for additional commands.\r\n\r\n## Versions\r\n\r\n* 0.4.0 - externalised [unfunk-diff](https://github.com/Bartvds/unfunk-diff), using [ministyle](https://github.com/Bartvds/ministyle), [miniwrite](https://github.com/Bartvds/miniwrite), dropped obsolete code.\r\n* 0.3.7 - fixed some bugs\r\n* 0.3.6 - relaxed string encoding, cleaned stack code, support Q longStack, support multi-line messages, fixed bugs & hardened output, added `q` and `node.js` to stack filter.\r\n* 0.3.0 - improved diffs (speed, linebreaks, escape with [jsesc](https://github.com/mathiasbynens/jsesc)), added output testing, added grunt task to set options, updated project\r\n* 0.2.3 - support bash style uppercased+underscore-style ENV options (tip by @reydelamirienda), skip diff excessively lengthy objects (strings/arrays/arguments/buffers) \r\n* 0.2.2 - fixed regular Error (stack) reporting, added `chai-as-promised` & `mocha-as-promised` to stack filter, updated screenshot\r\n* 0.2.1 - tweaked display, added pending test report (by @geekdave)\r\n* 0.2.0 - added string diff, more assertions and runner compatibility, changed default to `style='ansi'`\r\n* 0.1.13 - fix for grunt-mocha duration stats compatibility\r\n* 0.1.12 - refactored options; added style and writer\r\n* 0.1.11 - added mocha bin command test, improved reporting\r\n* 0.1.10 - objectDiff fix, added option() methods\r\n* 0.1.8 - compatible with grunt-mocha (PhantomJS)\r\n\r\n## License\r\n\r\nCopyright (c) 2013 Bart van der Schoor\r\n\r\nLicensed under the MIT license.\r\n\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/Bartvds/mocha-unfunk-reporter/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\r\n\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Bartvds/mocha-unfunk-reporter.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "0.4.0"
}
